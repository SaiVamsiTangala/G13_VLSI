module encoder(Y,A,EN);
  input [7:0] A;
input EN;
output reg [2:0] Y;
  always@(*)
begin
  if(EN==0)
Y<=1'b0;
else
  case(A)
8'b00000001:Y<=3'b000;
8'b00000010:Y<=3'b001;
8'b00000100:Y<=3'b010;
8'b00001000:Y<=3'b011;
8'b00010000:Y<=3'b100;
8'b00100000:Y<=3'b101;
8'b01000000:Y<=3'b110;
8'b10000000:Y<=3'b111;
endcase
end
endmodule



module encodertb();
reg [7:0]A;
wire [2:0]Y;
reg EN;
encoder dut(.A(A),.Y(Y),.EN(EN));
initial 
  begin
    $monitor("time=%0t , EN=%b , A=%b , Y=%b",$time,EN,A,Y);
	EN=1;
	A = 8'b00000001;
	#50
    EN=1;
    A = 8'b00000010;
	#50
    EN=1;
	A = 8'b00000100;
	#50
    EN=1;
	A = 8'b00001000;
	#50
    EN=1;
	A = 8'b00010000;
	#50
    EN=0;
	A = 8'b00100000;
	#50
    EN=1;
	A = 8'b01000000;
	#50
    EN=0;
	A = 8'b10000000;
	
end 
  initial 
    begin
      $dumpfile("dump.vcd");
      $dumpvars();
    end
endmodule
